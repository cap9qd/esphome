esphome:
  name: tuya-ir-blaster
  friendly_name: Tuya IR Blaster
      
bk72xx:
  board: cb3s
  framework:
    version: 0.0.0
    source: https://github.com/cap9qd/libretiny.git#master

# Enable logging
logger:
  baud_rate: 115200
  level: DEBUG
  hardware_uart: UART1

web_server:
  port: 80

captive_portal:

# Enable Home Assistant API
api:
  encryption:
    key: "RCP0MQrjanqbOlSjDVb1P1ZcyxKe7qkAo0RO+f4krT0="

ota:
  password: "82f3fcc3db4d823f807f9115b79759f4"

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "Tuya IR-Blaster Hotspot"
    password: "17jiH7OW8C4Q"
    
button:
  - platform: restart
    name: Restart

debug:
  update_interval: 30s

text_sensor:
  - platform: debug
    reset_reason:
      name: Reset Reason
  - platform: template
    name: "Last Code"
    id: last_code

binary_sensor:
  - platform: gpio
    id: rst_input
    name: Reset Button
    pin:
      number: 6
      inverted: true
      mode: INPUT_PULLUP
  - platform: remote_receiver
    name: "Bright Up"
    nec:
      address: 0xFF00
      command: 0xA35C
  - platform: remote_receiver
    name: "Bright Down"
    nec:
      address: 0xFF00
      command: 0xA25D
      
switch:
  - platform: gpio
    name: status_led
    id: status_led
    pin: 
      number: 8
      inverted: true

remote_transmitter:
  pin: P26
  carrier_duty_percent: 50%

remote_receiver:
  pin: 
    number: P7
    inverted: true
    mode:
      input: true
      pullup: true
  dump: nec
  on_nec:
    then:
      - text_sensor.template.publish:
          id: last_code
          state: !lambda 
                    char buf[6];
                    sprintf(buf, "%04X", x.command);
                    std::string s = buf;
                    return s;